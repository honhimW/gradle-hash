name: Release

permissions:
  contents: write
  packages: write

on:
  workflow_dispatch:

jobs:

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust: [stable]
    outputs:
      linux_amd64_sha256: ${{ steps.linux_amd64.outputs.sha256 }}
      mac_sha256: ${{ steps.mac.outputs.sha256 }}
      windows_amd64_sha256: ${{ steps.windows.outputs.sha256 }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: rust-toolchain
      uses: dtolnay/rust-toolchain@v1
      with:
        toolchain: stable
        target: aarch64-unknown-linux-gnu
    - name: Build
      run: cargo build --release
    - name: Package (Linux)
      id: linux_amd64
      if: matrix.os == 'ubuntu-latest'
      run: |
        tar -czvf ./target/release/linux-amd64.tar.gz LICENSE README.md -C ./target/release gradle-hash
        ARCHIVE_SHA256=$(sha256sum ./target/release/linux-amd64.tar.gz | awk '{print $1}')
        echo "sha256=$ARCHIVE_SHA256" >> $GITHUB_OUTPUT

    
    - name: Package (Mac)
      id: mac
      if: matrix.os == 'macos-latest'
      run: |
        tar -czvf ./target/release/mac.tar.gz LICENSE README.md -C ./target/release gradle-hash
        ARCHIVE_SHA256=$(shasum -a 256 ./target/release/mac.tar.gz | awk '{print $1}')
        echo "sha256=$ARCHIVE_SHA256" >> $GITHUB_OUTPUT

    - name: Package (Windows)
      id: windows
      if: matrix.os == 'windows-latest'
      run: |
        Compress-Archive -Path '.\README.md', '.\LICENSE', '.\target\release\gradle-hash.exe' -DestinationPath '.\target\release\windows-amd64.zip'
        $ARCHIVE_SHA256 = (Get-FileHash -Algorithm SHA256 -Path ".\target\release\windows-amd64.zip").Hash
        "sha256=$ARCHIVE_SHA256" >> $env:GITHUB_OUTPUT

  build-aarch64:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        rust: [stable]
    outputs:
      linux_aarch64_sha256: ${{ steps.linux_aarch64.outputs.sha256 }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: rust-toolchain
      uses: dtolnay/rust-toolchain@v1
      with:
        toolchain: stable
        target: aarch64-unknown-linux-gnu
    - name: Cargo
      uses: actions-rs/cargo@v1
      with:
          use-cross: true
          command: build
          args: --target aarch64-unknown-linux-gnu --release
    - name: Package (Linux-aarch64)
      id: linux_aarch64
      run: |
        tar -czvf ./target/aarch64-unknown-linux-gnu/release/linux-aarch64.tar.gz LICENSE README.md -C ./target/aarch64-unknown-linux-gnu/release gradle-hash
        ARCHIVE_SHA256=$(sha256sum ./target/release/linux-aarch64.tar.gz | awk '{print $1}')
        echo "sha256=$ARCHIVE_SHA256" >> $GITHUB_OUTPUT
  
  update_homebrew:
    runs-on: ubuntu-latest
    needs: [build, build-aarch64]
    steps:
    - name: Echo
      run: |
        echo "linux_amd64_sha256": "${{ needs.build.outputs.linux_amd64_sha256 }}"
        echo "linux_aarch64_sha256": "${{ needs.build-aarch64.outputs.linux_aarch64_sha256 }}"
        echo "mac_sha256": "${{ needs.build.outputs.mac_sha256 }}"
        echo "windows_amd64_sha256": "${{ needs.build.outputs.windows_amd64_sha256 }}"

    - name: Update Homebrew Formula
      run: |
        curl -X POST https://api.github.com/repos/honhimW/homebrew-tap/dispatches \
            -H "Accept: application/vnd.github.everest-preview+json" \
            -H "Authorization: token ${{ secrets.PERSONAL_ACCESS_TOKEN }}" \
            -d '{"event_type": "update-from-gradle-hash", "client_payload": {
              "version": "${{ github.event.inputs.major_version }}",
              "linux_amd64_sha256": "${{ needs.build.outputs.linux_amd64_sha256 }}",
              "linux_aarch64_sha256": "${{ needs.build-aarch64.outputs.linux_aarch64_sha256 }}",
              "mac_sha256": "${{ needs.build.outputs.linux_mac_sha256 }}",
              "windows_amd64_sha256": "${{ needs.build.outputs.windows_sha256 }}"
            }}'
